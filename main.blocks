<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="pxt-on-start" id="II[7+TA+E[y%{Oh2FmOd" x="20" y="20"><statement name="HANDLER"><block type="typescript_statement" id="1)}qfnr|EA.IAOxI7tjX"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace depthByY {" line1="    let spritesToSort: Sprite[] = []" line2="    let zOffsets: { [id: number]: number } = {}" line3="    let sortingEnabled = true" line4="" line5="    /**" line6="     * Enable or disable automatic sorting by Y" line7="     * @param active true to enable sorting, false to disable it" line8="     */" line9="    //% weight=60" line10="    //% block=&quot;enable depth sorting $active&quot;" line11="    //% block.loc.es=&quot;activar orden por profundidad $active&quot;" line12="    export function setSortingEnabled(active: boolean) {" line13="        sortingEnabled = active" line14="    }" line15="" line16="    /**" line17="     * Register a sprite to be automatically sorted by its Y position" line18="     * @param sprite the sprite to include in sorting" line19="     */" line20="    //% weight=100" line21="    //% block=&quot;sort sprite $sprite by Y&quot;" line22="    //% block.loc.es=&quot;ordenar sprite $sprite por Y&quot;" line23="    export function addSprite(sprite: Sprite) {" line24="        if (spritesToSort.indexOf(sprite) === -1) {" line25="            spritesToSort.push(sprite)" line26="        }" line27="    }" line28="" line29="    " line30="    /**" line31="    * Register a sprite with a custom Z offset for depth sorting" line32="    * @param sprite the sprite to include" line33="    * @param offset additional Z offset for fine-tuning" line34="    */" line35="    //% weight=80" line36="    //% block=&quot;sort sprite $sprite by Y with offset $offset&quot;" line37="    //% block.loc.es=&quot;ordenar sprite $sprite por Y con $offset&quot;" line38="    export function addSpriteWithOffset(sprite: Sprite, offset: number) {" line39="        if (!sprite || typeof sprite.id !== &quot;number&quot;) return" line40="        zOffsets[sprite.id] = offset" line41="        addSprite(sprite)" line42="    }" line43="    " line44="    /**" line45="    * Register a sprite and automatically calculate its offset based on the bottom of the hitbox" line46="    * @param sprite the sprite to sort" line47="    */" line48="    //% weight=90" line49="    //% block=&quot;sort sprite $sprite by bottom&quot;" line50="    //% block.loc.es=&quot;ordenar sprite $sprite por su base&quot;" line51="    export function addSpriteByBottom(sprite: Sprite) {" line52="        if (!sprite) return" line53="        let offset = sprite.bottom - sprite.y" line54="        addSpriteWithOffset(sprite, offset)" line55="    }" line56="" line57="    /**" line58="    * Set or update the Z offset for a registered sprite" line59="    * @param sprite the sprite to update" line60="    * @param offset new Z offset value" line61="    */" line62="    //% weight=70" line63="    //% block=&quot;set Z offset of $sprite to $offset&quot;" line64="    //% block.loc.es=&quot;ajustar desplazamiento Z de $sprite a $offset&quot;" line65="    export function setZOffset(sprite: Sprite, offset: number) {" line66="        if (!sprite || typeof sprite.id !== &quot;number&quot;) return" line67="        zOffsets[sprite.id] = offset" line68="    }" line69="    " line70="    /**" line71="    * Remove all registered sprites from sorting" line72="    */" line73="    //% weight=50" line74="    //% block=&quot;clear sorted sprites&quot;" line75="    //% block.loc.es=&quot;limpiar sprites ordenados&quot;" line76="    export function clearSprites() {" line77="        spritesToSort = []" line78="        zOffsets = {}" line79="    }" line80="" line81="    function getZOffset(sprite: Sprite): number {" line82="        return zOffsets[sprite.id] || 0" line83="    }" line84="    " line85="    function compareByY(a: Sprite, b: Sprite): number {" line86="        const ay = a.y + getZOffset(a)" line87="        const by = b.y + getZOffset(b)" line88="        return ay - by" line89="    }" line90="" line91="    game.onUpdate(function () {" line92="        if (!sortingEnabled) return" line93="        spritesToSort.sort(compareByY)" line94="        for (let i = 0; i &lt; spritesToSort.length; i++) {" line95="            spritesToSort[i].z = i" line96="        }" line97="    })" line98="}" numlines="99"></mutation></block></statement></block></xml>